// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
    User
    Admin
    Referent
}


model Festival {
  idFestival   Int      @id @default(autoincrement())
  NomFestival  String
  DateDebut    DateTime
  DateFin      DateTime
  Ville        String?

  ZonesBenevole ZoneBenevole[]
  Employers     Employer[]
}

// Association model
model Association {
  idAssociation  Int       @id @default(autoincrement())
  NomAssociation String    @unique
  Mail           String?

  // Relations
  Benevoles      Benevole[]
}

// ZoneBenevole model
model ZoneBenevole {
  idZoneBenevole   Int    @id
  nomZoneBenevole  String
  capacite         Int
  Festival         Festival  @relation(fields: [idFestival], references: [idFestival])
  idFestival       Int

  // Relations
  Jeux             Jeux[]
  Inscriptions     Inscription[]
  Benevoles        Benevole[]
}

// Poste model
model Poste {
  idPoste       Int       @id @default(autoincrement())
  nomPoste      String
  description   String
  capacite      Int
  

  // Relations
  Benevoles     Benevole[]
  Employers     Employer[]
  EtreReferents EtreReferent[]
  Inscriptions  Inscription[]
}

// Benevole model
model Benevole {
  idBenevole            Int          @id @default(autoincrement())
  Nom                   String
  Prenom                String
  Email                 String       @unique
  Password              String
  Role                  Role        @default(User)
  TailletTShirt         String
  Regime                String
  StatutHebergement     String
  NombreEditionPrecedente Int
  Adresse               String?
  Ville                 String?
  CodePostal            String?
  Telephone             String?
  JeuPrefere            String?
  idAssociation         Int?
  Association           Association?  @relation(fields: [idAssociation], references: [idAssociation])

  // Relations
  ZoneBenevole          ZoneBenevole[]
  Inscriptions          Inscription[]
  EtreReferents         EtreReferent[]
  Postes                Poste[]
}

// Jeux model
model Jeux {
  idJeux                Int       @id 
  NomJeu                String
  Editeur               String
  TypePublic            String
  Animation             Boolean
  Recu                  Boolean
  LienNotice            String
  LienVideoExplicative  String
  idZoneBenevole        Int?
  ZoneBenevole          ZoneBenevole? @relation(fields: [idZoneBenevole], references: [idZoneBenevole])
  }

// Inscription model
model Inscription {
  idBenevole     Int
  idZoneBenevole Int     
  idPoste        Int
  Creneau        String
  Jour           DateTime
  isPresent      Boolean   @default(false)
  Benevole       Benevole    @relation(fields: [idBenevole], references: [idBenevole])
  ZoneBenevole   ZoneBenevole? @relation(fields: [idZoneBenevole], references: [idZoneBenevole])
  Poste          Poste       @relation(fields: [idPoste], references: [idPoste])

  @@id([idBenevole, idPoste, idZoneBenevole, Creneau, Jour])
}

// EtreReferent model
model EtreReferent {
  idBenevole     Int
  idPoste        Int
  Benevole       Benevole @relation(fields: [idBenevole], references: [idBenevole])
  Poste          Poste    @relation(fields: [idPoste], references: [idPoste])

  @@id([idBenevole, idPoste])
}

// Employer model
model Employer {
  idFestival    Int
  idPoste       Int
  Festival      Festival @relation(fields: [idFestival], references: [idFestival])
  Poste         Poste    @relation(fields: [idPoste], references: [idPoste])

  @@id([idFestival, idPoste])
}

